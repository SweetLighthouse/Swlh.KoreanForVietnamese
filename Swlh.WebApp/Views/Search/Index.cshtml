@using HtmlAgilityPack
@using Microsoft.EntityFrameworkCore
@using Swlh.Domain.Enums
@using Swlh.WebApp.Application.Dtos.NaverVikoDtos
@using Swlh.WebApp.Controllers
@using Swlh.WebApp.Domain.Entities
@using System.Text.RegularExpressions
@using System.Net
@inject Swlh.WebApp.Context.MainDbContext context
@model SearchMaybek

@{
    Layout = "_SearchLayout";
    ViewData["Title"] = "Tìm kiếm";
    string query = Context.Request.Query.TryGetValue("query", out var val) ? val.ToString() : string.Empty;

    Guid.TryParse(Context.Session.GetString("Id"), out var id);
    bool isAdmin = Enum.TryParse(Context.Session.GetString("Role"), out Role role) && role == Role.Admin;

    // Step 1: Get all words that are similar (contain query)
    var allSimilars = context.Words
        .Where(w => w.WordVn.Contains(query) || w.WordKr.Contains(query))
        .ToList();

    // Step 2: Split into exact and actual similar words
    var exacts = allSimilars.Where(w => w.WordVn == query || w.WordKr == query).ToList();
}

<div class="row g-2">
    <div class="col-lg-9 order-lg-2">

        <!-- Thẻ chính -->
        <div class="card mb-2">
            <div class="card-body">

                <!-- Tiêu đề -->
                <h5 class="card-title m-0">
                    Có @exacts.Count kết quả.
                    <strong>@query</strong>
                    được tra cứu @context.Keywords.Find(query)?.SearchCount lần.
                </h5>
                <!-- End of Tiêu đề -->

                <!-- Ghi chú 1: found none -->
                @if (!exacts.Any())
                {
                    <p class="mb-0 mt-2">Hãy kiểm tra lại từ bạn muốn tìm. </p>
                    <p class="mb-0 mt-2">Nếu bạn biết nghĩa của từ này, hãy góp ý dưới đây.</p>
                }
                <!-- End of Ghi chú 1: found none -->


                <!-- Ghi chú 2: alternative -->
                @{
                    var forceQuery = Model?.forceQuery;
                    if (!string.IsNullOrWhiteSpace(forceQuery))
                    {
                        <p class="mb-0 mt-2">
                            Có phải bạn muốn tìm
                            <a asp-controller="@nameof(SearchController)[..^10]"
                               asp-action="@nameof(SearchController.Index)"
                               asp-route-query="@forceQuery">
                                @forceQuery
                            </a>
                            ?
                        </p>
                    }
                }
                <!-- End of Ghi chú 2: alternative -->


                <!-- ghi chú 3: từ vựng liên quan -->
                @{
                    var revert = Model?.revert;
                    if (!string.IsNullOrWhiteSpace(revert))
                    {
                        <p class="mb-0 mt-2">
                            Từ vựng liên quan
                            <a asp-controller="@nameof(SearchController)[..^10]"
                               asp-action="@nameof(SearchController.Index)"
                               asp-route-query="@revert">
                                @revert
                            </a>
                            ?
                        </p>
                    }
                }
                <!-- End of ghi chú 3: từ vựng liên quan -->
            </div>

            <!-- Từ vựng chính -->
            <partial name="_ExactWords" model="exacts" />
            <!-- End of Từ vựng chính -->

        </div>
        <!-- End of Thẻ chính -->
        
        @{
            // gọi api
            // lấy kết quả truyền vào partial chia động từ 
            // cũng lấy kết quả chia động từ tiếng hàn đó bỏ vào danh sách cần phải match trong search example
            HttpClient httpClient = new HttpClient();
            var message = await httpClient.GetAsync($"https://koreanverb.app/?search={Uri.EscapeDataString(query)}");
            HtmlDocument doc = new();
            doc.LoadHtml(message.Content.ReadAsStringAsync().Result);
            var nodes = doc.DocumentNode.SelectNodes("//tr[contains(@class, 'conjugation-row')]/td[2]");
            List<string> texts = (nodes != null && nodes.Any())
            ? nodes.Select(node => node.InnerText.Substring(0, node.InnerText.Length - 3)).ToList()
            : [];
            var baseWord = doc.DocumentNode.SelectSingleNode("//article/dl[@class='dl-horizontal']/dd")?.InnerText;
            texts.Add(baseWord ?? "");

            var koreanMatch = texts is null ? [query] : texts.Select(text => text.Replace("?", "")).Distinct().ToList();
            var examples = context.Examples
                .Where(example =>
                    koreanMatch.Any(t => example.Korean.Contains(t)) ||
                    example.Vietnamese.Contains(query)
                )
                .ToList();
        }

        <!-- Chia thể -->
        <partial name="_Conjugation" model="texts" />
        <!-- End of Chia thể -->


        <!-- Ví dụ -->
        <partial name="_Examples" model="examples" />
        <!-- End of Ví dụ-->



        <!-- Bình luận góp ý -->
        <script src="~/js/handle_react.js" defer></script>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title m-0">Bình luận góp ý</h5>

                <!-- End of Comment Form -->
                @if (id != Guid.Empty)
                {
                    <form method="post" id="myForm"
                          asp-controller="@nameof(CommentOnKeywordController)[..^10]"
                          asp-action="@nameof(CommentOnKeywordController.Handle)"
                          class="d-flex justify-content-between gap-2 mt-2">
                        <textarea id="myInput" name="Content" class="form-control" placeholder="Nhập bình luận..."></textarea>
                        <button type="submit" name="type" value="add" class="btn btn-primary align-self-start">Gửi</button>
                    </form>
                }
                else
                {
                    <p class="mb-0 mt-2">
                        <a class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover"
                           asp-controller="Authentication"
                           asp-action="Login"
                           asp-route-backurl="@(Context.Request.Path + Context.Request.QueryString)">Đăng nhập</a>
                        để góp ý và phát triển cộng đồng!
                    </p>
                }
                <!-- End of Comment Form -->
            </div>
            
            
            <!-- Comment List -->
            @{
                var comments = context.CommentOnKeywords
                .Where(comment => comment.Key == query)
                .OrderByDescending(comments => comments.CreatedAt)
                .Include(a => a.Account)
                .Include(a => a.Reactions);
            }
            <ul class="list-group list-group-flush">
                
                @foreach (var comment in comments)
                {
                    <li class="list-group-item">

                        <!-- Options dropdown -->
                        @* <div class="dropstart position-absolute top-0 end-0 m-2"> *@
                        @*     <button type="button" class="btn btn-sm btn-light" data-bs-toggle="dropdown" aria-expanded="false"> *@
                        @*         <i>⋯</i> *@
                        @*     </button> *@
                        @*     <ul class="dropdown-menu"> *@
                        @*         <!-- Dropdown menu links --> *@
                        @*     </ul> *@
                        @* </div> *@

                        <div class="dropstart position-absolute top-0 end-0 m-2">
                            <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i>⋯</i>
                            </button>
                            <ul class="dropdown-menu">

                                @if (comment.AccountId == id)
                                {
                                    <li>
                                        <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#editComment-@comment.Id">Sửa</button>
                                    </li>
                                }

                                @if (comment.AccountId == id || isAdmin)
                                {
                                    <li>
                                        <button class="dropdown-item text-danger" data-bs-toggle="modal" data-bs-target="#deleteComment-@comment.Id">Xóa</button>
                                    </li>
                                }
                            </ul>

                            <div class="modal fade" id="editComment-@comment.Id" tabindex="-1" role="dialog" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <form method="post" asp-controller="@nameof(CommentOnKeywordController)[..^10]"
                                              asp-action="@nameof(CommentOnKeywordController.Handle)">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Chỉnh sửa bình luận</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                                            </div>

                                            <div class="modal-body">
                                                <div class="mb-3">
                                                    <label for="commentTextarea-@comment.Id" class="form-label">Nội dung</label>
                                                    <textarea class="form-control" id="commentTextarea-@comment.Id" name="content" rows="4">@comment.Content</textarea>
                                                </div>
                                                <input type="hidden" name="commentId" value="@comment.Id" />
                                            </div>

                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                                <button type="submit" name="type" value="edit" class="btn btn-primary">Gửi</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                            <!-- Delete Confirmation Modal -->
                            <div class="modal fade" id="deleteComment-@comment.Id" tabindex="-1" role="dialog" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <form method="post" asp-controller="@nameof(CommentOnKeywordController)[..^10]"
                                              asp-action="@nameof(CommentOnKeywordController.Handle)">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Xác nhận xóa</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                                            </div>

                                            <div class="modal-body">
                                                <p>Bạn có chắc muốn xóa bình luận này không?</p>
                                                <input type="hidden" name="commentId" value="@comment.Id" />
                                                <input type="hidden" name="type" value="delete" />
                                            </div>

                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                                <button type="submit" class="btn btn-danger">Xóa</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>


                        </div>

                        <!-- Comment Content -->
                        <p class="mb-2">@comment.Content</p>

                        <!-- Reactions + Author/Time -->
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="me-2">

                                <button class="btn btn-sm btn-outline-success" onclick="handleReact(this.parentElement, `/api/CommentOnKeywordReaction`, `@comment.Id`, true)">
                                    @if (comment.Reactions.Any(r => r.IsLike && r.AccountId == id))
                                    {
                                        <i class="bi bi-hand-thumbs-up-fill"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-hand-thumbs-up"></i>
                                    }
                                    <span class="ms-1">@comment.Reactions.Where(r => r.IsLike).Count()</span>
                                </button>

                                <button class="btn btn-sm btn-outline-danger" onclick="handleReact(this.parentElement, `/api/CommentOnKeywordReaction`, `@comment.Id`, false)">
                                    @if (comment.Reactions.Any(r => !r.IsLike && r.AccountId == id))
                                    {
                                        <i class="bi bi-hand-thumbs-down-fill"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-hand-thumbs-down"></i>
                                    }
                                    <span class="ms-1">@comment.Reactions.Where(r => !r.IsLike).Count()</span>
                                </button>
                            </div>
                            <div class="text-end small text-muted">
                                <strong>@comment.Account.Username</strong>
                                <span>@comment.CreatedAt.ToLocalTime().ToString("g")</span>
                            </div>
                        </div>

                    </li>

                }
            </ul>
        </div>
        <!-- End of Bình luận góp ý -->
    </div>

    <div class="col-lg-3 order-lg-1">
        <partial name="_SimilarWords" model="allSimilars.Where(w => !(w.WordVn == query || w.WordKr == query)).ToList()" />
    </div>
</div>